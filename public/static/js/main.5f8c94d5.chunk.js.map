{"version":3,"sources":["serviceWorker.js","components/common/HeaderNav.js","util/index.js","components/common/dialog.js","App.js","router/router.fun.js","components/login.js","components/layout.js","components/home.js","components/common/aside.js","components/common/content.js","components/mange.js","components/check.js","components/allot.js","router/router.config.js","components/doxs.js","router/index.js","store/action/home.js","store/reducer/home.js","store/reducer/index.js","store/saga/index.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderNav","_this$props","this","props","logoSrc","lists","usernames","infoNum","console","log","_react_16_6_0_react_default","a","createElement","class","className","src","map","item","index","NavLink","key","Date","getTime","toString","Math","random","to","path","activeClassName","texts","watchClickLi","Component","defaultProps","styles","position","left","top","right","bottom","background","Dialog","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isShow","_this2","style","objectSpread","display","onClick","setState","nextProps","React","IsNew","withRouter","_ref","routes","Switch","urls","Route","render","component","assign","children","Login","history","title","changeTitles","push","getInfo","id","width","height","mynode","localStorage","setItem","alert","connect","store","home","dispatch","newtitle","type","Layout","concat","_this$state","common_HeaderNav","router_fun","Home","getItem","Redirect","removeItem","Aside","aside","Link","text","Content","common_aside","Mange","navText","content","Check","Allot","config","ReactRoot","BrowserRouter","WATCH","action","initData","homes","reducer","combineReducers","Task","Listener","Rootsaga","fetchs","url","fetch","then","res","json","regenerator_default","wrap","_context","prev","next","sent","put","stop","_marked","_context2","takeEvery","_marked2","_context3","all","_marked3","createReduxSagas","createReduxSaga","createStore","applyMiddleware","run","rootsaga","ReactDOM","router","document","getElementById"],"mappings":"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","file":"static/js/main.5f8c94d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport {NavLink,Route} from 'react-router-dom'\r\nimport { keyFun } from '../../util';\r\nimport propTypes from 'prop-types'\r\nclass HeaderNav extends Component {\r\n  render () {\r\n    let {logoSrc, lists,usernames, infoNum} = this.props\r\n    console.log(infoNum,8888)\r\n    return <div class=\"header\">\r\n      <h1 className=\"logos\">\r\n        <img src={logoSrc}></img>\r\n      </h1>\r\n      <div className=\"lists\">\r\n        {\r\n          lists.map((item, index)=>{\r\n            return <NavLink key={keyFun()} to={item.path} className=\"lis\" activeClassName=\"selected\">{item.texts}</NavLink>\r\n            // return <li key={keyFun()} onClick={this.clickLi.bind(this,item,index)}>{item.texts}</li>\r\n          })\r\n        }  \r\n      </div>\r\n      <p className=\"names\">{usernames}</p>\r\n      <div className=\"info\">{infoNum}</div>\r\n    </div>\r\n    }\r\n    clickLi (item, index) {\r\n      this.props.watchClickLi(item, index)\r\n    }\r\n}\r\nHeaderNav.propTypes = {\r\n  lists: propTypes.array,\r\n  watchClickLi: propTypes.func \r\n}\r\nHeaderNav.defaultProps = {\r\n  lists: [{\r\n    texts: '首页'\r\n  },{\r\n    texts: '我们'\r\n  },{\r\n    texts: '你的'\r\n  }],\r\n  watchClickLi: (item, key)=>{\r\n    console.log(item, key)\r\n  }\r\n}\r\nexport default HeaderNav","function keyFun () {\r\n  let times = new Date().getTime.toString(10)\r\n  let rand = Math.random(4).toString(16)\r\n  return times + rand\r\n}\r\nexport {keyFun};","import React from 'react'\r\nlet styles = {\r\n  position:'absolute',\r\n  left:0,top:0,right:0,bottom:0,\r\n  background:'rgba(0,0,0,.5)'\r\n}\r\nclass Dialog extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isShow: this.props.isShow\r\n    }\r\n }\r\n  render () {\r\n    let {isShow} = this.state\r\n    return <div style={{...styles,display:isShow?'block':'none'}}>\r\n      <button onClick={\r\n          ()=>{\r\n            this.setState({\r\n              isShow: false\r\n            })\r\n          }\r\n      }>确定</button>\r\n      <button>取消</button>\r\n    </div>\r\n  }\r\n  componentWillReceiveProps (nextProps) {\r\n    this.setState({\r\n        isShow: nextProps\r\n    })\r\n  }\r\n}\r\nDialog.defaultProps = {\r\n  isShow: true\r\n}\r\nexport default Dialog","import React from 'react'\r\nimport HeaderNav from './components/common/HeaderNav'\r\nimport Dialog from './components/common/dialog'\r\nlet IsNew = null\r\nclass App extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isShow :false\r\n    }\r\n  }\r\n  render () {\r\n    let {isShow} = this.state\r\n    return <div>\r\n      <HeaderNav></HeaderNav>\r\n      {/* <Dialog isShow={isShow}></Dialog>\r\n      <Dialog isShow={isShow}></Dialog> */}\r\n      <button onClick={\r\n        ()=>{\r\n          this.setState({\r\n            isShow: true\r\n          })\r\n        }\r\n      }>显示</button>\r\n      <button onClick={\r\n        ()=>{\r\n          this.setState({\r\n            isShow: true\r\n          })\r\n        }\r\n      }>显示2</button>\r\n      {\r\n        this.myFun()\r\n      }\r\n  </div>\r\n  }\r\n  myFun () {\r\n    let {isShow} = this.state\r\n    if(isShow){\r\n      if(!IsNew) {\r\n        IsNew = Dialog\r\n      }\r\n      return <IsNew isShow={isShow} />\r\n    }else{\r\n      return null\r\n    }\r\n  }\r\n}\r\nexport default App;","import React from 'react'\r\nimport {Switch, Route, withRouter,Redirect} from 'react-router-dom'\r\nfunction RouterFun({routes,match}){//props指路由信息\r\n return <Switch>\r\n   {\r\n     routes.map((item,key)=>{\r\n       let urls = match.path === '/'? item.path : match.path + item.path\r\n       console.log(urls)\r\n       return <Route path={urls} render={(props)=>{\r\n         return <item.component routes={item.children} {...props}/>\r\n       }} key={key}></Route>\r\n      \r\n     })\r\n    }\r\n   </Switch>\r\n\r\n}\r\nexport default withRouter(RouterFun) ","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n// import echarts from 'echarts'\r\nclass Login extends React.Component {\r\n  render () {\r\n    let {history, title, changeTitles} = this.props\r\n    return <div>\r\n      <span>{title}</span>\r\n      <button onClick={()=>changeTitles('你是啥子嘛')}>点击触发dispatch</button>\r\n      <button onClick={()=>history.push('/layout/home')}>登陆</button>\r\n      <button onClick={this.getInfo}>获取权限</button>\r\n      <div id=\"myChart\" style={{width: '300px', height: '300px'}}></div>\r\n    </div>\r\n  }\r\n  componentDidMount(){\r\n    this.mynode()\r\n  }\r\n  mynode () {\r\n     // let myChart = echarts.init(document.getElementById('myChart'))\r\n     // 绘制图表\r\n      // myChart.setOption({\r\n      //     title: { text: '在Vue中使用echarts' },\r\n      //     tooltip: {},\r\n      //     xAxis: {\r\n      //         data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      //     },\r\n      //     yAxis: {},\r\n      //     series: [{\r\n      //         name: '销量',\r\n      //         type: 'bar',\r\n      //         data: [5, 20, 36, 10, 10, 20]\r\n      //     }]\r\n      // });\r\n  \r\n}\r\n  getInfo () {\r\n    localStorage.setItem('user','success')\r\n    alert('获取成功')\r\n  }\r\n}\r\nlet mapStateToProps = (state,store)=>{\r\n  let {home} = state\r\n  return {...home}\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n  return{\r\n    changeTitles (newtitle) {\r\n      dispatch({type:'home/changeTitle',newtitle})\r\n     }\r\n  }\r\n}\r\nLogin = connect(mapStateToProps,mapDispatchToProps)(Login)\r\nexport default Login","import {Link,Route} from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport RouterFun from '../router/router.fun'\r\nimport HeaderNav from '../components/common/HeaderNav'\r\nimport '../css/index.css'\r\nclass Layout extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    let {match} = this.props\r\n    this.state={\r\n      lists:[{\r\n        texts: '首页',\r\n        path: `${match.path}/home`\r\n      },{\r\n        texts:'我们',\r\n        path: `${match.path}/mange`\r\n      },{\r\n        texts:'你的',\r\n        path: `${match.path}/check`\r\n      }],\r\n      logoSrc:'../img/logo.jpg',\r\n      usernames:'今日阳光',\r\n      infoNum:'通知栏'\r\n    }\r\n  }\r\n  render () {\r\n    let {lists,logoSrc,usernames,infoNum} = this.state\r\n    let {routes} = this.props\r\n   return <div className=\"obox\">\r\n        <HeaderNav lists={lists} logoSrc={logoSrc} usernames={usernames} infoNum={infoNum}></HeaderNav>\r\n        {/* <Link to={`${match.path}/home`}>首页</Link>\r\n        <Link to={`${match.path}/mange`}>管理</Link>\r\n        <Link to={`${match.path}/check`}>考勤</Link> */}\r\n      <section>\r\n        <RouterFun routes={routes}></RouterFun>\r\n        {/* <Route path={`${match.path}/home`} component={Home}></Route>\r\n        <Route path={`${match.path}/mange`} component={Mange}></Route>\r\n        <Route path={`${match.path}/check`} component={Check}></Route> */}\r\n      </section>\r\n    </div>\r\n  }\r\n}\r\nexport default Layout\r\n\r\n","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Home extends React.Component {\r\n  render () {\r\n  let {history} = this.props\r\n  if(localStorage.getItem('user')!=='success'){\r\n    return <Redirect to=\"/login\"></Redirect>\r\n  }\r\n   return <div>\r\n     shouye\r\n     <button onClick={()=>{\r\n       history.push('/login')\r\n       localStorage.removeItem('user')\r\n       }}>退出</button>\r\n   </div> \r\n  }\r\n}\r\nexport default Home","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nclass Aside extends React.Component {\r\n  render () {\r\n    let {aside} = this.props\r\n     return <div>\r\n       {\r\n         aside.map((item,key)=>{\r\n            return <Link to={item.path} key={key}>{item.text}</Link>\r\n         })\r\n       }\r\n      \r\n    </div>\r\n  }\r\n}\r\nexport default Aside","import React from 'react'\r\nimport Aside from '../common/aside'\r\n\r\nclass Content extends React.Component {\r\n  render () {\r\n    let {aside} = this.props\r\n    return <div>\r\n      <Aside aside={aside}></Aside>\r\n      <div className=\"rigcont\">\r\n        {this.props.children}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\nexport default Content","import React from 'react'\r\nimport Content from '../components/common/content'\r\nimport RouterFun from '../router/router.fun'\r\nclass Mange extends React.Component {\r\n  render () {\r\n    let {routes,match} = this.props\r\n    console.log(routes,88888888888888)\r\n    let aside =routes.map((item,key)=>{\r\n      return {\r\n        text : item.navText,\r\n        path : match.path + item.path\r\n      }\r\n    })\r\n    console.log(aside,77)\r\n   return <div>\r\n     <Content aside={aside}>\r\n        <RouterFun routes={routes}></RouterFun>\r\n     </Content>\r\n   </div> \r\n  }\r\n}\r\nexport default Mange","import React from 'react'\r\nclass Check extends React.Component {\r\n  render () {\r\n   return <div>员工考勤</div> \r\n  }\r\n}\r\nexport default Check","import React from 'react'\r\nclass Allot extends React.Component{\r\n  render () {\r\n      return <div>\r\n          我是分配\r\n      </div>\r\n  }\r\n}\r\nexport default Allot","import Login from '../components/login'\r\nimport Layout from '../components/layout'\r\nimport Home from '../components/home'\r\nimport Mange from '../components/mange'\r\nimport Check from '../components/check'\r\nimport Allot from '../components/allot'\r\nimport Doxs from '../components/doxs'\r\nexport const config = [{\r\n  path: '/login',\r\n  component: Login,\r\n  navText: '登陆'\r\n},{\r\n  path: '/layout',\r\n  component: Layout,\r\n  navText: '分类',\r\n  children: [{\r\n      path: '/home',\r\n      component: Home,\r\n      navText: '首页'\r\n  },{\r\n    path: '/mange',\r\n    component: Mange,\r\n    navText: '管理',\r\n    children: [{\r\n      path: '/doxs',\r\n      component: Doxs,\r\n      navText: '档案管理'\r\n    },{\r\n      path: '/allot',\r\n      component: Allot,\r\n      navText: '分配管理'\r\n    }]\r\n  },{\r\n    path: '/check',\r\n    component: Check,\r\n    navText:'考勤'\r\n  }]\r\n}]","import React from 'react'\r\nclass Doxs extends React.Component{\r\n  render () {\r\n      return <div>\r\n          我是档案\r\n      </div>\r\n  }\r\n}\r\nexport default Doxs","import React, {Component} from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport RouterFun from '../router/router.fun'\r\nimport {config} from '../router/router.config'\r\nfunction ReactRoot (props) {\r\n  return <Router>\r\n    <RouterFun routes={config}></RouterFun>\r\n    {/* <Switch>\r\n       <Route path=\"/login\" component={Login}></Route>\r\n       <Route path=\"/layout\" component={Layout}></Route>\r\n    </Switch> */}\r\n  </Router>\r\n}\r\nexport default ReactRoot","export const WATCH ='watch'","/**\r\n * \r\n * 使用策略模式\r\n * @param {*} state \r\n * @param {*} action \r\n */\r\nimport {WATCH} from '../action/home'\r\nlet type = {\r\n    WATCH(state, action){\r\n        state.initData = action.initData\r\n     }\r\n}\r\nlet homes = (state, action)=>{\r\n    type[action.type] && type[action.type](state, action)\r\n    return {...state}\r\n}\r\nexport default homes","import {combineReducers} from 'redux'\r\nimport home from './home'\r\nlet reducer = combineReducers({\r\n    home\r\n})\r\nexport default reducer","import {call,put,all,takeEvery} from 'redux-saga/effects'\r\nimport {WATCH} from '../action/home'\r\nfunction fetchs(url){\r\n    return fetch(url).then(res=>{\r\n        return res.json()\r\n    })\r\n}\r\n// 任务saga\r\n function * Task () {\r\n    let initData = yield call (fetchs,'http://localhost:9000/login')\r\n    console.log(initData)\r\n    yield put({type:WATCH,initData})\r\n }\r\n// 监听\r\nfunction * Listener () {\r\n    yield takeEvery('lastusing',Task)\r\n}\r\n// rootsaga\r\nfunction * Rootsaga () {\r\n    yield all([Listener()])\r\n}\r\nexport default Rootsaga","import { createStore, applyMiddleware } from 'redux'\r\nimport reducer from './reducer/index'\r\nimport createReduxSaga from 'redux-saga'\r\nimport rootsaga from './saga'\r\nconst createReduxSagas = createReduxSaga ()\r\n\r\nconst store = createStore(reducer,applyMiddleware(createReduxSagas))\r\ncreateReduxSagas.run(rootsaga)\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport ReactRoot from './router'\nimport store from './store'\nReactDOM.render(<ReactRoot/>, document.getElementById('root'))\nif (process.env.NODE_ENV === 'development') {\n  serviceWorker.unregister();\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import App from './App';\n// import {header, section, footer} from './App'\n// import {Header, Section, Footer} from './App'\n// let bigbox = React.createElement('div',null,[header, section, footer])\n// let vigbox=<div>\n//     <Header></Header>\n//     <Section></Section>\n//     <Footer></Footer>\n// </div>\n// ReactDOM.render(bigbox, document.getElementById('root'));\n// ReactDOM.render(<div>{[header, section, footer]}</div>, document.getElementById('root'));\n// ReactDOM.render(vigbox,document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}